name: Rust CI

on:
  push:
  schedule:
    - cron: '0 18 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - {command: fmt, rust: nightly, args: '--all -- --check', hdf5: false}
          - {command: clippy, rust: stable, args: '--all-features --tests -- -D warnings', hdf5: true}
          - {command: test, rust: stable, args: '--all-features -p deep_filter', hdf5: true}
          - {command: build, rust: stable, args: '-p deep_filter', hdf5: false}
          - {command: build, rust: stable, args: '--all-features', hdf5: true}
          - {command: build, rust: nightly, args: '--all-features', hdf5: true}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: 'rustfmt, clippy'
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.command }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install HDF5
        if: matrix.hdf5 == true
        run: sudo apt-get install libhdf5-dev
      - name: Run cargo ${{matrix.command}}
        shell: bash
        run: |
          cargo ${{matrix.command}} ${{matrix.args}}
      - uses: actions/upload-artifact@v3
        if: matrix.command == 'test'
        with:
          name: test-artifacts
          path: out/
