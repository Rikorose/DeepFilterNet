name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test-build-arm-wheels:
    name: Test Cross Compile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        manylinux: [2014]
        python:
          # CPython
          - version: 3.7
            abi: cp37-cp37m
          - version: 3.8
            abi: cp38-cp38
          - version: 3.9
            abi: cp39-cp39
          - version: 3.10
            abi: cp310-cp310
        platform:
          - target: aarch64-unknown-linux-gnu
            arch: aarch64
          - target: armv7-unknown-linux-gnueabihf
            arch: armv7
    container:
      image: docker://messense/manylinux${{matrix.manylinux}}-cross:${{matrix.platform.arch}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{matrix.manylinux}}-${{matrix.platform.arch}}
      - name: Install Rust (${{matrix.rust}})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.rust}}
          override: true
          target: ${{matrix.platform.target}}
      - name: Set Python Version
        run: |
          echo "PYO3_CROSS_PYTHON_VERSION=${{matrix.python.version}}" >> $GITHUB_ENV
          echo "PYO3_CROSS_LIB_DIR=/opt/python/${{matrix.python.abi}}" >> $GITHUB_ENV
      - name: Build DeepFilterLib wheel
        run: |
          sudo python3 -m pip install maturin
          maturin build --release -o dist --no-sdist \
            -i python3.9 \
            --target ${{ matrix.platform.target }} \
            --manylinux ${{ matrix.manylinux }} \
            -m pyDF/Cargo.toml
      - uses: actions/upload-artifact@v2
        with:
          name: libdf-arm-wheels
          path: dist/
